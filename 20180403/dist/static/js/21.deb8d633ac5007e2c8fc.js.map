{"version":3,"sources":["webpack:///src/pages/drive/monitor/monitor.vue","webpack:///./src/pages/drive/monitor/monitor.vue?0226","webpack:///./src/pages/drive/monitor/monitor.vue"],"names":["monitor","_this","this","_getAllCar","timer","_this2","_iteratorNormalCompletion","item","_step","value","latitude","msg","val","_this3","row","_this4","point","datas","_this5","res","map","mapPanel","map_panel","carTable","car_table","monitor_monitor","render","_h","$createElement","_c","_self","staticClass","attrs","isNeedMapObj","defaultZoom","defaultCity","on","sendMapObj","getMapObj","_v","width","type","label","showSelection","onCarTableCellClick","onCarTableSelection","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"+KAqCAA,QAEA,0EAQA,eACA,gBACA,gBAEA,uBAEA,IAAAC,EAAAC,6BAEAC,sCAEAC,QAEA,oCAIA,IAAAC,EAAAH,sDAEA,IAAAI,GAAA,8EACA,KAAAC,EAAAC,EAAAC,gCACAC,yHAIAC,SAEA,oEAMAC,yCAGA,IAAAC,EAAAX,mEAGAE,sBAEA,qBACA,sDAEAU,kDAEA,uBACAA,IACA,sCAGA,IAAAC,EAAAb,+DAEAE,QACA,mFAGA,0DACAM,8CAKAM,iBAHA,8DACAN,mFAKAO,gCAEAA,6BACAD,yBAEAZ,2BAEA,yBAEA,uCAKA,IAAAc,EAAAhB,oEAGAiB,wCAEAL,iFAGAA,yDAMAV,0CAKAgB,gBAIAC,SAAAC,EAAA,EAEAC,SAAAC,EAAA,ICpJAC,GADiBC,OAFjB,WAA0B,IAAaC,EAAbzB,KAAa0B,eAA0BC,EAAvC3B,KAAuC4B,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,WAAqBE,YAAA,YAAsBF,EAAA,gBAAAA,EAAA,WAAAA,EAAA,aAAmDG,OAAOC,cAAA,EAAAC,YAAA,EAAAC,YAAA,MAAuDC,IAAKC,WAAhOnC,KAAgOoC,cAA4B,GAA5PpC,KAA4PqC,GAAA,KAAAV,EAAA,YAAiCG,OAAOQ,MAAA,WAAiBX,EAAA,WAAgBG,OAAOS,KAAA,iBAAsBZ,EAAA,eAAoBG,OAAOU,MAAA,UAAgBb,EAAA,YAAiBG,OAAOW,eAAA,GAAqBP,IAAKQ,oBAA/b1C,KAA+b0C,oBAAAC,oBAA/b3C,KAA+b2C,wBAA6F,oBAEriBC,oBCCjB,IAcAC,EAdAC,EAAA,OAcAC,CACAjD,EACAyB,GATA,EAVA,SAAAyB,GACAF,EAAA,SAaA,kBAEA,MAUAG,EAAA,QAAAJ,EAAA","file":"static/js/21.deb8d633ac5007e2c8fc.js","sourcesContent":["<style scoped lang=\"less\">\r\n  @import \"./monitor.less\";\r\n</style>\r\n\r\n<template>\r\n\t<section class=\"monitor\">                 \r\n\t\t<el-container>\r\n      <el-main>\r\n        <!-- <div class=\"map-menu\"></div> -->\r\n        <!-- sync组件双向绑定 -->\r\n        <!-- <bdmap :mapObj.sync=\"baiduMap\"></bdmap> -->\r\n        <!-- on emit 组件绑定 -->\r\n        <map-panel :isNeedMapObj=\"true\" @sendMapObj=\"getMapObj\" :defaultZoom=\"5\" defaultCity=\"北京\"></map-panel>\r\n        <!-- <el-dialog title=\"跟踪\" :visible.sync=\"trackDialog\">\r\n          <el-table :data=\"trackDialogData\">\r\n            <el-table-column property=\"entity_name\" label=\"名称\"></el-table-column>\r\n            <el-table-column property=\"entity_desc\" label=\"描述\" width=\"200\"></el-table-column>\r\n            <el-table-column property=\"create_time\" label=\"创建时间\" width=\"150\"></el-table-column>\r\n          </el-table>\r\n        </el-dialog> -->\r\n      </el-main>\r\n      <el-aside width=\"320px\">\r\n        <el-tabs type=\"border-card\">\r\n          <el-tab-pane label=\"车辆列表\">\r\n            <carTable :showSelection=\"true\" @onCarTableCellClick=\"onCarTableCellClick\" @onCarTableSelection=\"onCarTableSelection\"></carTable>\r\n          </el-tab-pane>\r\n        </el-tabs>\r\n      </el-aside>\r\n    </el-container>\r\n\t</section>\r\n</template>\r\n\r\n<script> \r\nimport {addCarMapOverlay, getInfoWindow, formatLngLat,getInfoWindowHtml} from '@/common/js/bdmap'\r\nimport mapPanel from '@/components/map-panel'\r\nimport carTable from '@/components/car-table'\r\nimport {getAllCar, getMonitorCarInfo} from '@/api/drive'\r\nexport default {\r\n  name: 'monitor',\r\n  data () {\r\n    return {\r\n      mapObj: null, // 地图对象\r\n      // trackDialogData: [{\r\n      // }],\r\n      // trackDialog: false,\r\n      multipleSelection: null, // 多选按钮值\r\n      timer: null,\r\n      carMarker: null,\r\n      infoWindow: null,\r\n      winStatus: false\r\n    }\r\n  },\r\n  mounted() {\r\n    setTimeout(() => {\r\n      this._getAllCar()\r\n      if(this.timer){\r\n        clearInterval(this.timer)\r\n      }\r\n    },20)\r\n  },\r\n  methods:{\r\n    // 获取所有车辆\r\n    _getAllCar(){\r\n      getAllCar().then(res=>{\r\n        if(res.data.ret == 0){\r\n          for(let item of res.data.datas){\r\n            let marker = addCarMapOverlay(item.longitude,item.latitude)\r\n          }\r\n        }else{\r\n          this.$message({\r\n            message: res.data.msg,\r\n            type: 'error'\r\n          })\r\n        }\r\n      })\r\n    },\r\n    // 表格单选框选中事件\r\n    onCarTableSelection(val) {\r\n      this.multipleSelection = val\r\n    },\r\n    // 表格单元格点击事件\r\n    onCarTableCellClick(row, column, cell, event){\r\n      if(column.property == 'vehicle_number'){\r\n        if(this.timer){\r\n          clearInterval(this.timer)\r\n        }\r\n        this.carMarker = null\r\n        this.winStatus = false\r\n        this.mapObj.clearOverlays() // 清除地图覆盖物\r\n        this._getMonitorCarInfo(row)\r\n        this.timer = setInterval(()=>{\r\n          this.winStatus = false\r\n          this._getMonitorCarInfo(row)\r\n        }, 10000)\r\n      }\r\n    },\r\n    _getMonitorCarInfo(row){\r\n      if(this.$route.name !== 'monitor'){\r\n        clearInterval(this.timer)\r\n        return false\r\n      }\r\n      getMonitorCarInfo({vehicle_number: row.vehicle_number}).then(res=>{\r\n        if(res.data.ret == 0){\r\n          let point = new BMap.Point(res.data.datas.longitude,res.data.datas.latitude)\r\n          if(!this.carMarker){\r\n            this.winStatus = true\r\n            this.carMarker = addCarMapOverlay(res.data.datas.longitude,res.data.datas.latitude)\r\n          }else{\r\n            this.carMarker.setPosition(point)\r\n          }\r\n          this.carMarker.addEventListener(\"click\",(e) => {\r\n            this.loadMapDialog(res.data.datas)\r\n          })\r\n          this.loadMapDialog(res.data.datas)\r\n          this.mapObj.setViewport([point])\r\n        }else{\r\n          clearInterval(this.timer)\r\n          this.$message({\r\n            message: '车辆实时数据获取失败，请重新获取！',\r\n            type: 'error'\r\n          })\r\n        }\r\n      })\r\n    },\r\n    // 组合地图窗口html\r\n    loadMapDialog(row){\r\n      // formatLngLat异步格式化经纬度\r\n      formatLngLat(row.longitude, row.latitude).then(res => {\r\n        row.address = res\r\n        if(this.winStatus){\r\n          this.infoWindow = getInfoWindow(row)\r\n          this.carMarker.openInfoWindow(this.infoWindow) //开启信息窗口\r\n        }else{\r\n          this.infoWindow.setContent(getInfoWindowHtml(row))\r\n        }\r\n      })\r\n    },\r\n    created() {\r\n      if(this.timer){\r\n        clearInterval(this.timer)\r\n      }\r\n    },\r\n    // 获取地图组件传递来的地图对象\r\n    getMapObj(map){\r\n      this.mapObj = map\r\n    },\r\n  },\r\n  components:{\r\n    mapPanel,\r\n    carTable\r\n  }\r\n}\r\n</script>\n\n\n// WEBPACK FOOTER //\n// src/pages/drive/monitor/monitor.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{staticClass:\"monitor\"},[_c('el-container',[_c('el-main',[_c('map-panel',{attrs:{\"isNeedMapObj\":true,\"defaultZoom\":5,\"defaultCity\":\"北京\"},on:{\"sendMapObj\":_vm.getMapObj}})],1),_vm._v(\" \"),_c('el-aside',{attrs:{\"width\":\"320px\"}},[_c('el-tabs',{attrs:{\"type\":\"border-card\"}},[_c('el-tab-pane',{attrs:{\"label\":\"车辆列表\"}},[_c('carTable',{attrs:{\"showSelection\":true},on:{\"onCarTableCellClick\":_vm.onCarTableCellClick,\"onCarTableSelection\":_vm.onCarTableSelection}})],1)],1)],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/_vue-loader@13.7.1@vue-loader/lib/template-compiler?{\"id\":\"data-v-44bd1bde\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/_vue-loader@13.7.1@vue-loader/lib/selector.js?type=template&index=0!./src/pages/drive/monitor/monitor.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/_extract-text-webpack-plugin@3.0.2@extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/_vue-loader@13.7.1@vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-44bd1bde\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/_vue-loader@13.7.1@vue-loader/lib/selector?type=styles&index=0!./monitor.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/_vue-loader@13.7.1@vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/_vue-loader@13.7.1@vue-loader/lib/selector?type=script&index=0!./monitor.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/_vue-loader@13.7.1@vue-loader/lib/selector?type=script&index=0!./monitor.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/_vue-loader@13.7.1@vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-44bd1bde\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/_vue-loader@13.7.1@vue-loader/lib/selector?type=template&index=0!./monitor.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-44bd1bde\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/drive/monitor/monitor.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}